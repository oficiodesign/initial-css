///
/// @link https://bitsofco.de/linting-html-using-css/
/// @link https://github.com/j9t/qa-style-sheet
///
///
///
// sass-lint:disable no-important

%error {
	outline: 5px solid palette('debug') !important;
}

@mixin alert {
	&::before {
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		display: block;
		z-index: layer('modal');
		padding: 1em;
		font-weight: font-weight('heavy');
		text-align: center;
		color: palette('white');
		background-color: palette('debug');

		@content;
	}
}

/* Deprecated elements */
acronym,
applet,
basefont,
bgsound,
big,
blink,
center,
comment,
dir,
embed,
font,
frame,
frameset,
isindex,
listing,
marquee,
multicol,
nobr,
noembed,
plaintext,
spacer,
strike,
wbr,
xmp {
	@extend %error;

	@include alert {
		content: 'Deprecated element.' !important;
	}
}

/* Inline Styles */
[style]:not([class*='js-']) {
	@extend %error;

	@include alert {
		content: '`style` attribute shouldn\'t be used, despeite being added by some scripts.' !important;
	}
}

/* Faulty or Missing Link Targets */
a {
	&:not([href]),
	&[href$='#'],
	&[href=''],
	&[href^='javascript'] {
		@extend %error;

		@include alert {
			content: 'Links should only be used to navigation. Use a `<button>` instead.' !important;
		}
	}
}

/* Layout tables */
table table {
	@extend %error;

	@include alert {
		content: 'Tables shouldn\'t be nested.' !important;
	}

	display: block !important;
}

/* Unaccessible Images */
/*
*	@see	http://www.userfocus.co.uk/articles/alt_text.html
*/
img:not([alt]) {
	@extend %error;

	+ * {
		@include alert {
			content: '`alt` attribute missing.' !important;
		}
	}
}

// Missing Document Language
html:not([lang]),
html[lang=''] {
	body {
		@extend %error;

		@include alert {
			content: 'Missing Document Language.' !important;
		}
	}
}

// Incorrect Character Set
meta[charset='UTF-8']:not(:first-child) {
	& + body {
		@extend %error;

		@include alert {
			content: 'Incorrect Character Set.' !important;
		}
	}
}

// Unaccessible Viewport Attributes
meta[name='viewport'][content*='user-scalable=no'],
meta[name='viewport'][content*='maximum-scale'],
meta[name='viewport'][content*='minimum-scale'] {
	& + body {
		@extend %error;

		@include alert {
			content: 'Unaccessible Viewport Attributes.' !important;
		}
	}
}


form[action=''] {
	@extend %error;

	@include alert {
		content: '`action` attribute isn\'t required on `form`, but it shouldn\'t be empty.' !important;
	}
}


label:not([for]) {
	@extend %error;

	@include alert {
		content: 'Isn\'t the `for` attribute missing?.' !important;
	}
}

// Unlabelled Form Elements
input,
select,
textarea {
	&:not([id]),
	&:not([name]) {
		@extend %error;
	}
}

form:not([name]):not([id]) {
	@extend %error;

/// If the image button (<input type="image">) is used, the label is set in
/// the alt attribute, for example:
/// <input type="image" src="searchbutton.png" alt="Search">
///
/// @link https://www.w3.org/WAI/tutorials/forms/labels/#labelling-buttons
///
input[type='image'] {
	&:not([alt])
	&[alt=''] {
		@extend %error;
	}

	+ * {
		@include alert {
			content: '`input[type=image]` requires `alt` attribute.' !important;
		}
	}
}

// Empty Interactive Elements
button:empty,
a:empty {
	@extend %error;

	+ * {
		@include alert {
			content: 'To prevent decimal separator issues, declared [lang].' !important;
		}
	}
}

// Prevent decimal separator issues
// @see https://ctrl.blog/entry/html5-input-number-localization
input[type='number']:not([lang]) {
	@extend %error;

	@include alert {
		content: 'The default `type` of a button is `submit`, but this isn\'t clear to all developers. To avoid confusion, declare it.' !important;
	}
}

// Unnecessary or Deprecated Attributes

script[type='text/javascript'],
link[rel='stylesheet'][type='text/css'] {
	@include alert {
		content: 'Unnecessary or Deprecated Attributes';
	}

	@at-root {
		head {
			display: block !important;
			overflow: visible !important;
		}
	}
}


/* Empty elements not used for scripting */
p:empty:not([id]),
li:empty:not([id]),
th:empty:not([id]),
td:empty:not([id]),
div:empty:not([id]),
span:empty:not([id]) {
	@extend %error;

	@include alert {
		content: 'Empty element should only be used for scripting.' !important;
	}
}

