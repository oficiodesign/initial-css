// -----------------------------------------------------------------------------
// This file contains all application-wide Sass variables.
// -----------------------------------------------------------------------------



$title-font-stack: 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif !default;


/// Regular font family
/// @type List
$text-font-stack: 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif !default;

/// Code (monospace) font family
/// @type List
$code-font-stack: 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Monaco', monospace !default;




/// body text font-size
/// @type Length
$body-font-size: 1em !default;

$line-height: 1.5;

/// flexible line heights map
/// @access private
/// @type Map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are line-heights expressed in `em` due to a browser calc limitation
$line-heights: (
	'min': 1.3em,
	'max': 1.5em,
) !default;


/// flexible line length map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are line lenths expressed in `em`
$line-length-gates: (
	'lower': 21em,
	'upper': 35em,
) !default;


/// Friendlier colour names with Sass maps
/// @access private
$_color-base-grey: rgb(229, 231, 234);

/// @access private
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are pure colors or the returned value of functions

// this is a variable. A variable map!
// scss-lint:disable ColorVariable
$palettes: (
	'gray':  (
		'base': $_color-base-grey,
		'light': tint($_color-base-grey, 10%),
		'dark': shade($_color-base-grey, 10%)
	),
	// 'disabled':(
	// 	'text': rgb(109, 109, 109),
	// 	'background': rgb(240,240,240)
	// ),
	// 'link': (
	// 	'base': rgb(0, 0, 255),
	// 	'visited': rgb(0, 0, 255),
	// 	'hover': rgb(0, 0, 255),
	// 	'focus': rgb(0, 0, 255),
	// 	'active': rgb(0, 0, 255),
	// ),
);
// scss-lint:enable ColorVariable

/// Copy text color
/// @type Color
$text-color: rgb(34, 34, 34) !default;

/// Main brand color
/// @type Color
$brand-color: rgb(229, 0, 80) !default;

/// Light grey
/// @type Color
$light-grey: rgb(237, 237, 237) !default;

/// Medium grey
/// @type Color
$mid-grey: rgb(153, 153, 153) !default;

/// Dark grey
/// @type Color
$dark-grey: rgb(68, 68, 68) !default;




/// Container's maximum width
/// @type Length
$max-width: 1180px !default;

@function im-to-em($breakpoints, $base-value: 16px) {
	$new-breakpoints: ();

	@each $name, $value in $breakpoints {
		$em-value: ($value / $base-value) * 1em;
		$new-breakpoints: map-merge($new-breakpoints, ($name: $em-value));
	}

	@return $new-breakpoints;
}

/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$breakpoints: im-to-em((
  'phone': 320px,
  'tablet': 768px,
  'desktop': 1024px
)) !default;

	// 320
	// 480
	// 760
	// 960
	// 1200
	// 1600.


// layers map override
//
// being the default
// $layers: (
// 		'modal': 5000,
// 		'dropdown': 4000,
// 		'default': 1,
// 		'below': -1,
// );


/// Relative or absolute URL where all assets are served from
/// @type String
/// @example scss - When using a CDN
///   $base-url: 'http://cdn.example.com/assets/';
$base-url: '/assets/' !default;
