@use 'sass:color';
@use 'sass:string';

@use '../stylesheets/abstracts/functions' as f;
@use './constants' as *;

@mixin text-contrast($b, $f: null) {
  @if f.text-contrast($b, $f) == transparent {
    &::before {
      content: 'Impossible for ';

      filter: invert(100%);
    }
  } @else {
    text-align: right;

    color: f.text-contrast($b, $f);

    &::before {
      display: block;

      margin-bottom: 1.5rem;

      text-align: left;

      content: '\25a0\a0'+ string.quote(#{f.text-contrast($b, $f)});
    }
  }
}

.colors {
  display: flex;

  flex-wrap: wrap;

  padding: 0;
}

.color {
  display: block;

  flex-grow: 1;
  flex-shrink: 0;

  width: 25%;

  padding: 0.75rem;
  margin: 0;

  font-weight: f.font-weight('bold');
  font-size: small;
  line-height: 1;

  text-align: center;

  list-style-type: none;

  &::before,
  &::after {
    position: static;
  }

  @media screen and (min-width: #{768 / 16 * 1em}) {
    width: 12.5%;
  }
}

@each $color in constants.$colors {
  $selector: string.to-lower-case(string.slice(#{$color}, 2, 7));

  .color--blackwhite-#{$selector} {
    @include text-contrast($color);

    background-color: $color;
  }

  .color--mono-#{$selector} {
    @include text-contrast($color, $color);

    background-color: $color;
  }

  .color--alpha-#{$selector} {
    @include text-contrast($color, rgba($color, 0.15));

    background-color: $color;
  }

  .color--complementary-#{$selector} {
    @include text-contrast($color, color.adjust($color, $hue: 180));

    background-color: $color;
  }

  .color--compound-#{$selector} {
    @include text-contrast($color, color.adjust($color, $hue: 210));

    background-color: $color;
  }

  .color--analogous-1-#{$selector} {
    @include text-contrast($color, color.adjust($color, $hue: 30));

    background-color: $color;
  }

  .color--analogous-2-#{$selector} {
    @include text-contrast($color, color.adjust($color, $hue: -30));

    background-color: $color;
  }

  .color--triadic-1-#{$selector} {
    @include text-contrast($color, color.adjust($color, $hue: 120));

    background-color: $color;
  }

  .color--triadic-2-#{$selector} {
    @include text-contrast($color, color.adjust($color, $hue: 240));

    background-color: $color;
  }
}
